---
- hosts: all
  vars_files:
    - vault.yaml
    - ros_vars.yaml
  become: true
  become_method: sudo  # Use sudo for all nodes

  tasks:
    - name: Set hostname for lwf-node1
      hostname:
        name: "lwf-node1"
      when: inventory_hostname == 'lwf-node1'

    - name: Set hostname for lwf-node2
      hostname:
        name: "lwf-node2"
      when: inventory_hostname == 'lwf-node2'

    - name: Set hostname for lwf-node3
      hostname:
        name: "lwf-node3"
      when: inventory_hostname == 'lwf-node3'

    - name: Set hostname for lwf-vm
      hostname:
        name: "lwf-vm"
      when: inventory_hostname == 'lwf-vm'

    - name: Configure DNS for the VM
      template:
        src: templates/netplan_dns.j2
        dest: /etc/netplan/00-installer-config.yaml
      vars:
        static_ip: "{{ vm_ip }}"
      when: inventory_hostname == 'lwf-vm'
      notify: Apply Netplan Configuration

    - name: Configure DNS for Node 1
      template:
        src: templates/netplan_dns.j2
        dest: /etc/netplan/orangepi-default.yaml
      vars:
        static_ip: "{{ node_one_ip }}"
      when: inventory_hostname == 'lwf-node1'
      notify: Apply Netplan Configuration

    - name: Configure DNS for Node 2
      template:
        src: templates/netplan_dns.j2
        dest: /etc/netplan/orangepi-default.yaml
      vars:
        static_ip: "{{ node_two_ip }}"
      when: inventory_hostname == 'lwf-node2'
      notify: Apply Netplan Configuration

    - name: Configure DNS for Node 3
      template:
        src: templates/netplan_dns.j2
        dest: /etc/netplan/orangepi-default.yaml
      vars:
        static_ip: "{{ node_three_ip }}"
        dns_ip: "1.1.1.1"
      when: inventory_hostname == 'lwf-node3'
      notify: Apply Netplan Configuration

  handlers:
    - name: Apply Netplan Configuration
      command: netplan apply
# Install and configure PiHole
- hosts: lwf-node3
  vars_files:
    - vault.yaml  # Reference the encrypted vault file
    - ros_vars.yaml
  become: true
  become_method: sudo  # Use sudo for all nodes
  tasks:
    - name: Set Pi-hole installation environment variables
      shell: |
        export PIHOLE_INTERFACE=eth0
        export IPV4_ADDRESS=192.168.5.242/22
        export QUERY_LOGGING=true
        export INSTALL_WEB_INTERFACE=true
        export WEBPASSWORD={{ become_password }}
        export PIHOLE_DNS_1=9.9.9.9
        export PIHOLE_DNS_2=1.1.1.1

    - name: Install Pi-hole non-interactively
      shell: curl -sSL https://install.pi-hole.net | bash /dev/stdin --unattended

    - name: Enable and start Pi-hole service
      systemd:
        name: pihole-FTL.service
        enabled: yes
        state: started
